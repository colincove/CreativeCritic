package com.example.creativecritic;

import java.util.ArrayList;
import java.util.List;

import com.example.creativecritic.LowestDetailLevel.RetainedFragment;
import com.example.creativecritic.webservices.CategoryReview;
import com.example.creativecritic.webservices.GetReviewsResult;
import com.example.creativecritic.webservices.IResultListener;
import com.example.creativecritic.webservices.Result;

import android.annotation.TargetApi;
import android.app.ActionBar;
import android.os.Bundle;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.NavUtils;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListAdapter;
import android.widget.TextView;

public class CategoryScreen extends FragmentListActivity<Category, CategoryScreen.CategoryDataFragment> implements
		ActionBar.OnNavigationListener {

	/**
	 * The serialization (saved instance state) Bundle key representing the
	 * current dropdown position.
	 */
	
	private static final String STATE_SELECTED_NAVIGATION_ITEM = "selected_navigation_item";


	private SubordinatesRequest request;
	public CategoryScreen(){
		super(new Generic<CategoryDataFragment>(CategoryDataFragment.class));
	}
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_category_screen);

		listAdapter = new CategoryArrayAdapter<Category>(this,
				R.layout.review_item2, category_list);
		//
		// Set up the action bar to show a dropdown list.
		final ActionBar actionBar = getActionBar();
		actionBar.setDisplayShowTitleEnabled(false);
		actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);
		// Show the Up button in the action bar.
		actionBar.setDisplayHomeAsUpEnabled(true);

		// Set up the dropdown list navigation in the action bar.
		actionBar.setListNavigationCallbacks(
		// Specify a SpinnerAdapter to populate the dropdown list.
				new ArrayAdapter<String>(getActionBarThemedContextCompat(),
						android.R.layout.simple_list_item_1,
						android.R.id.text1, new String[] {
								getString(R.string.title_section1),
								getString(R.string.title_section2),
								getString(R.string.title_section3), }), this);
	
	if(workerFragment.getCurrentData()==null){
		workerFragment.setCategoryId(1);
		request=(SubordinatesRequest)webservices.requestSubordinates(this, workerFragment.getCategoryId());
	}else{
		result(workerFragment.getCurrentData());
	}
	this.getActionBar();
	
	}
	/**
	 * Backward-compatible version of {@link ActionBar#getThemedContext()} that
	 * simply returns the {@link android.app.Activity} if
	 * <code>getThemedContext</code> is unavailable.
	 */
	@TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)
	private Context getActionBarThemedContextCompat() {
		if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH) {
			return getActionBar().getThemedContext();
		} else {
			return this;
		}
	}

	@Override
	public void onRestoreInstanceState(Bundle savedInstanceState) {
		// Restore the previously serialized current dropdown position.
		if (savedInstanceState.containsKey(STATE_SELECTED_NAVIGATION_ITEM)) {
			getActionBar().setSelectedNavigationItem(
					savedInstanceState.getInt(STATE_SELECTED_NAVIGATION_ITEM));
		}
	}

	@Override
	public void onSaveInstanceState(Bundle outState) {
		// Serialize the current dropdown position.
		outState.putInt(STATE_SELECTED_NAVIGATION_ITEM, getActionBar()
				.getSelectedNavigationIndex());
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.category_screen, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			// This ID represents the Home or Up button. In the case of this
			// activity, the Up button is shown. Use NavUtils to allow users
			// to navigate up one level in the application structure. For
			// more details, see the Navigation pattern on Android Design:
			//
			// http://developer.android.com/design/patterns/navigation.html#up-vs-back
			//
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public boolean onNavigationItemSelected(int position, long id) {
		// When the given dropdown item is selected, show its contents in the
		// container view.
		Fragment fragment = new DummySectionFragment();
		Bundle args = new Bundle();
		args.putInt(DummySectionFragment.ARG_SECTION_NUMBER, position + 1);
		fragment.setArguments(args);
		getSupportFragmentManager().beginTransaction()
				.replace(R.id.container, fragment).commit();
		return true;
	}

	/**
	 * A dummy fragment representing a section of the app, but that simply
	 * displays dummy text.
	 */
	public static class DummySectionFragment extends Fragment {
		/**
		 * The fragment argument representing the section number for this
		 * fragment.
		 */
		public static final String ARG_SECTION_NUMBER = "section_number";

		public DummySectionFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(
					R.layout.fragment_category_screen_dummy, container, false);
			TextView dummyTextView = (TextView) rootView
					.findViewById(R.id.section_label);
			dummyTextView.setText(Integer.toString(getArguments().getInt(
					ARG_SECTION_NUMBER)));
			return rootView;
		}
	}

		@Override
		public void result(Result result) {
			super.result(result);
			// TODO Auto-generated method stub
			SubordinatesResult subordinateResult = (SubordinatesResult) result;
			workerFragment.pushResult(subordinateResult);
			listAdapter.clear();
			listAdapter.addAll(subordinateResult.getList());
			listFragment.setListShown(true);
		}
	@Override
	public void resultFail() {
		// TODO Auto-generated method stub
		
	}
	 public static class CategoryDataFragment extends Fragment {
		 private static final String TAG = "CATEGORY_DATA";
		 private List<SubordinatesResult> results;
		 private int category_id=-1;

	        public CategoryDataFragment(){
	        	results=new ArrayList<SubordinatesResult>();
	        }
	        public void onCreate(Bundle savedInstanceState) {
	            super.onCreate(savedInstanceState);
	            
	            // Tell the framework to try to keep this fragment around
	            // during a configuration change.
	            setRetainInstance(true);
	         
	        }
	        public void pushResult(SubordinatesResult result){
	        	results.add(result);
	        }
	        public SubordinatesResult pop(SubordinatesResult result){
	        	if(results.size()==0)return null;
	        	SubordinatesResult returnItem=results.get(results.size()-1);
	        	results.remove(returnItem);
	        	return returnItem;
	        }
	       public SubordinatesResult getCurrentData(){
	    	   if(results.size()==0)return null;
	        	return results.get(results.size()-1);
	       }
	       public int getCategoryId(){
	    	   return category_id;
	       }
	       public void setCategoryId(int value){
	    	   category_id=value;
	       }
	        
	 }

	@Override
	public void onItemClick(AdapterView parent, View v, int position, long id) {
		// TODO Auto-generated method stub
		Category item = category_list.get(position);
		if(item!=null){
			if(item.hasChildren()){
				listFragment.setListShown(false);
				request=(SubordinatesRequest)webservices.requestSubordinates(this, item.getId());
			}else{
				Intent intent = new Intent(getBaseContext(), LowestDetailLevel.class);
				intent.putExtra("EXTRA_SESSION_ID", sessionId);
				startActivity(intent)
			}
		}
		
	}

}

